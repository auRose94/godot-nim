# ======================================== #
# This module was generated automatically. #
# Edits will be lost.                      #
# ======================================== #
import ./../helper/engineClassDefiner

define_godot_engine_class_essencials(PhysicsServer2DExtension, PhysicsServer2D)
method worldBoundaryShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method separationRayShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method segmentShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method circleShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method rectangleShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method capsuleShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method convexPolygonShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method concavePolygonShapeCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method shapeSetData*(self: PhysicsServer2DExtension; shape: RID; data: ptr Variant) {.base.} = (discard)
method shapeSetCustomSolverBias*(self: PhysicsServer2DExtension; shape: RID; bias: Float) {.base.} = (discard)
method shapeGetType*(self: PhysicsServer2DExtension; shape: RID): PhysicsServer2D_ShapeType {.base.} = (discard)
method shapeGetData*(self: PhysicsServer2DExtension; shape: RID): Variant {.base.} = (discard)
method shapeGetCustomSolverBias*(self: PhysicsServer2DExtension; shape: RID): Float {.base.} = (discard)
method shapeCollide*(self: PhysicsServer2DExtension; shapeA: RID; xformA: Transform2D; motionA: Vector2; shapeB: RID; xformB: Transform2D; motionB: Vector2; retvals: pointer; retvalMax: int32; retvalCount: ptr int32): Bool {.base.} = (discard)
method spaceCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method spaceSetActive*(self: PhysicsServer2DExtension; space: RID; active: Bool) {.base.} = (discard)
method spaceIsActive*(self: PhysicsServer2DExtension; space: RID): Bool {.base.} = (discard)
method spaceSetParam*(self: PhysicsServer2DExtension; space: RID; param: PhysicsServer2D_SpaceParameter; value: Float) {.base.} = (discard)
method spaceGetParam*(self: PhysicsServer2DExtension; space: RID; param: PhysicsServer2D_SpaceParameter): Float {.base.} = (discard)
method spaceGetDirectState*(self: PhysicsServer2DExtension; space: RID): PhysicsDirectSpaceState2D {.base.} = (discard)
method spaceSetDebugContacts*(self: PhysicsServer2DExtension; space: RID; maxContacts: int32) {.base.} = (discard)
method spaceGetContacts*(self: PhysicsServer2DExtension; space: RID): PackedVector2Array {.base.} = (discard)
method spaceGetContactCount*(self: PhysicsServer2DExtension; space: RID): int32 {.base.} = (discard)
method areaCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method areaSetSpace*(self: PhysicsServer2DExtension; area: RID; space: RID) {.base.} = (discard)
method areaGetSpace*(self: PhysicsServer2DExtension; area: RID): RID {.base.} = (discard)
method areaAddShape*(self: PhysicsServer2DExtension; area: RID; shape: RID; transform: Transform2D; disabled: Bool) {.base.} = (discard)
method areaSetShape*(self: PhysicsServer2DExtension; area: RID; shapeIdx: int32; shape: RID) {.base.} = (discard)
method areaSetShapeTransform*(self: PhysicsServer2DExtension; area: RID; shapeIdx: int32; transform: Transform2D) {.base.} = (discard)
method areaSetShapeDisabled*(self: PhysicsServer2DExtension; area: RID; shapeIdx: int32; disabled: Bool) {.base.} = (discard)
method areaGetShapeCount*(self: PhysicsServer2DExtension; area: RID): int32 {.base.} = (discard)
method areaGetShape*(self: PhysicsServer2DExtension; area: RID; shapeIdx: int32): RID {.base.} = (discard)
method areaGetShapeTransform*(self: PhysicsServer2DExtension; area: RID; shapeIdx: int32): Transform2D {.base.} = (discard)
method areaRemoveShape*(self: PhysicsServer2DExtension; area: RID; shapeIdx: int32) {.base.} = (discard)
method areaClearShapes*(self: PhysicsServer2DExtension; area: RID) {.base.} = (discard)
method areaAttachObjectInstanceId*(self: PhysicsServer2DExtension; area: RID; id: uint64) {.base.} = (discard)
method areaGetObjectInstanceId*(self: PhysicsServer2DExtension; area: RID): uint64 {.base.} = (discard)
method areaAttachCanvasInstanceId*(self: PhysicsServer2DExtension; area: RID; id: uint64) {.base.} = (discard)
method areaGetCanvasInstanceId*(self: PhysicsServer2DExtension; area: RID): uint64 {.base.} = (discard)
method areaSetParam*(self: PhysicsServer2DExtension; area: RID; param: PhysicsServer2D_AreaParameter; value: ptr Variant) {.base.} = (discard)
method areaSetTransform*(self: PhysicsServer2DExtension; area: RID; transform: Transform2D) {.base.} = (discard)
method areaGetParam*(self: PhysicsServer2DExtension; area: RID; param: PhysicsServer2D_AreaParameter): Variant {.base.} = (discard)
method areaGetTransform*(self: PhysicsServer2DExtension; area: RID): Transform2D {.base.} = (discard)
method areaSetCollisionLayer*(self: PhysicsServer2DExtension; area: RID; layer: uint32) {.base.} = (discard)
method areaGetCollisionLayer*(self: PhysicsServer2DExtension; area: RID): uint32 {.base.} = (discard)
method areaSetCollisionMask*(self: PhysicsServer2DExtension; area: RID; mask: uint32) {.base.} = (discard)
method areaGetCollisionMask*(self: PhysicsServer2DExtension; area: RID): uint32 {.base.} = (discard)
method areaSetMonitorable*(self: PhysicsServer2DExtension; area: RID; monitorable: Bool) {.base.} = (discard)
method areaSetPickable*(self: PhysicsServer2DExtension; area: RID; pickable: Bool) {.base.} = (discard)
method areaSetMonitorCallback*(self: PhysicsServer2DExtension; area: RID; callback: Callable) {.base.} = (discard)
method areaSetAreaMonitorCallback*(self: PhysicsServer2DExtension; area: RID; callback: Callable) {.base.} = (discard)
method bodyCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method bodySetSpace*(self: PhysicsServer2DExtension; body: RID; space: RID) {.base.} = (discard)
method bodyGetSpace*(self: PhysicsServer2DExtension; body: RID): RID {.base.} = (discard)
method bodySetMode*(self: PhysicsServer2DExtension; body: RID; mode: PhysicsServer2D_BodyMode) {.base.} = (discard)
method bodyGetMode*(self: PhysicsServer2DExtension; body: RID): PhysicsServer2D_BodyMode {.base.} = (discard)
method bodyAddShape*(self: PhysicsServer2DExtension; body: RID; shape: RID; transform: Transform2D; disabled: Bool) {.base.} = (discard)
method bodySetShape*(self: PhysicsServer2DExtension; body: RID; shapeIdx: int32; shape: RID) {.base.} = (discard)
method bodySetShapeTransform*(self: PhysicsServer2DExtension; body: RID; shapeIdx: int32; transform: Transform2D) {.base.} = (discard)
method bodyGetShapeCount*(self: PhysicsServer2DExtension; body: RID): int32 {.base.} = (discard)
method bodyGetShape*(self: PhysicsServer2DExtension; body: RID; shapeIdx: int32): RID {.base.} = (discard)
method bodyGetShapeTransform*(self: PhysicsServer2DExtension; body: RID; shapeIdx: int32): Transform2D {.base.} = (discard)
method bodySetShapeDisabled*(self: PhysicsServer2DExtension; body: RID; shapeIdx: int32; disabled: Bool) {.base.} = (discard)
method bodySetShapeAsOneWayCollision*(self: PhysicsServer2DExtension; body: RID; shapeIdx: int32; enable: Bool; margin: Float) {.base.} = (discard)
method bodyRemoveShape*(self: PhysicsServer2DExtension; body: RID; shapeIdx: int32) {.base.} = (discard)
method bodyClearShapes*(self: PhysicsServer2DExtension; body: RID) {.base.} = (discard)
method bodyAttachObjectInstanceId*(self: PhysicsServer2DExtension; body: RID; id: uint64) {.base.} = (discard)
method bodyGetObjectInstanceId*(self: PhysicsServer2DExtension; body: RID): uint64 {.base.} = (discard)
method bodyAttachCanvasInstanceId*(self: PhysicsServer2DExtension; body: RID; id: uint64) {.base.} = (discard)
method bodyGetCanvasInstanceId*(self: PhysicsServer2DExtension; body: RID): uint64 {.base.} = (discard)
method bodySetContinuousCollisionDetectionMode*(self: PhysicsServer2DExtension; body: RID; mode: PhysicsServer2D_CCDMode) {.base.} = (discard)
method bodyGetContinuousCollisionDetectionMode*(self: PhysicsServer2DExtension; body: RID): PhysicsServer2D_CCDMode {.base.} = (discard)
method bodySetCollisionLayer*(self: PhysicsServer2DExtension; body: RID; layer: uint32) {.base.} = (discard)
method bodyGetCollisionLayer*(self: PhysicsServer2DExtension; body: RID): uint32 {.base.} = (discard)
method bodySetCollisionMask*(self: PhysicsServer2DExtension; body: RID; mask: uint32) {.base.} = (discard)
method bodyGetCollisionMask*(self: PhysicsServer2DExtension; body: RID): uint32 {.base.} = (discard)
method bodySetCollisionPriority*(self: PhysicsServer2DExtension; body: RID; priority: Float) {.base.} = (discard)
method bodyGetCollisionPriority*(self: PhysicsServer2DExtension; body: RID): Float {.base.} = (discard)
method bodySetParam*(self: PhysicsServer2DExtension; body: RID; param: PhysicsServer2D_BodyParameter; value: ptr Variant) {.base.} = (discard)
method bodyGetParam*(self: PhysicsServer2DExtension; body: RID; param: PhysicsServer2D_BodyParameter): Variant {.base.} = (discard)
method bodyResetMassProperties*(self: PhysicsServer2DExtension; body: RID) {.base.} = (discard)
method bodySetState*(self: PhysicsServer2DExtension; body: RID; state: PhysicsServer2D_BodyState; value: ptr Variant) {.base.} = (discard)
method bodyGetState*(self: PhysicsServer2DExtension; body: RID; state: PhysicsServer2D_BodyState): Variant {.base.} = (discard)
method bodyApplyCentralImpulse*(self: PhysicsServer2DExtension; body: RID; impulse: Vector2) {.base.} = (discard)
method bodyApplyTorqueImpulse*(self: PhysicsServer2DExtension; body: RID; impulse: Float) {.base.} = (discard)
method bodyApplyImpulse*(self: PhysicsServer2DExtension; body: RID; impulse: Vector2; position: Vector2) {.base.} = (discard)
method bodyApplyCentralForce*(self: PhysicsServer2DExtension; body: RID; force: Vector2) {.base.} = (discard)
method bodyApplyForce*(self: PhysicsServer2DExtension; body: RID; force: Vector2; position: Vector2) {.base.} = (discard)
method bodyApplyTorque*(self: PhysicsServer2DExtension; body: RID; torque: Float) {.base.} = (discard)
method bodyAddConstantCentralForce*(self: PhysicsServer2DExtension; body: RID; force: Vector2) {.base.} = (discard)
method bodyAddConstantForce*(self: PhysicsServer2DExtension; body: RID; force: Vector2; position: Vector2) {.base.} = (discard)
method bodyAddConstantTorque*(self: PhysicsServer2DExtension; body: RID; torque: Float) {.base.} = (discard)
method bodySetConstantForce*(self: PhysicsServer2DExtension; body: RID; force: Vector2) {.base.} = (discard)
method bodyGetConstantForce*(self: PhysicsServer2DExtension; body: RID): Vector2 {.base.} = (discard)
method bodySetConstantTorque*(self: PhysicsServer2DExtension; body: RID; torque: Float) {.base.} = (discard)
method bodyGetConstantTorque*(self: PhysicsServer2DExtension; body: RID): Float {.base.} = (discard)
method bodySetAxisVelocity*(self: PhysicsServer2DExtension; body: RID; axisVelocity: Vector2) {.base.} = (discard)
method bodyAddCollisionException*(self: PhysicsServer2DExtension; body: RID; exceptedBody: RID) {.base.} = (discard)
method bodyRemoveCollisionException*(self: PhysicsServer2DExtension; body: RID; exceptedBody: RID) {.base.} = (discard)
method bodyGetCollisionExceptions*(self: PhysicsServer2DExtension; body: RID): TypedArray[RID] {.base.} = (discard)
method bodySetMaxContactsReported*(self: PhysicsServer2DExtension; body: RID; amount: int32) {.base.} = (discard)
method bodyGetMaxContactsReported*(self: PhysicsServer2DExtension; body: RID): int32 {.base.} = (discard)
method bodySetContactsReportedDepthThreshold*(self: PhysicsServer2DExtension; body: RID; threshold: Float) {.base.} = (discard)
method bodyGetContactsReportedDepthThreshold*(self: PhysicsServer2DExtension; body: RID): Float {.base.} = (discard)
method bodySetOmitForceIntegration*(self: PhysicsServer2DExtension; body: RID; enable: Bool) {.base.} = (discard)
method bodyIsOmittingForceIntegration*(self: PhysicsServer2DExtension; body: RID): Bool {.base.} = (discard)
method bodySetStateSyncCallback*(self: PhysicsServer2DExtension; body: RID; callable: Callable) {.base.} = (discard)
method bodySetForceIntegrationCallback*(self: PhysicsServer2DExtension; body: RID; callable: Callable; userdata: ptr Variant) {.base.} = (discard)
method bodyCollideShape*(self: PhysicsServer2DExtension; body: RID; bodyShape: int32; shape: RID; shapeXform: Transform2D; motion: Vector2; retvals: pointer; retvalMax: int32; retvalCount: ptr int32): Bool {.base.} = (discard)
method bodySetPickable*(self: PhysicsServer2DExtension; body: RID; pickable: Bool) {.base.} = (discard)
method bodyGetDirectState*(self: PhysicsServer2DExtension; body: RID): PhysicsDirectBodyState2D {.base.} = (discard)
method bodyTestMotion*(self: PhysicsServer2DExtension; body: RID; `from`: Transform2D; motion: Vector2; margin: Float; collideSeparationRay: Bool; recoveryAsCollision: Bool; retval: ptr PhysicsServer2DExtensionMotionResult): Bool {.base.} = (discard)
method jointCreate*(self: PhysicsServer2DExtension): RID {.base.} = (discard)
method jointClear*(self: PhysicsServer2DExtension; joint: RID) {.base.} = (discard)
method jointSetParam*(self: PhysicsServer2DExtension; joint: RID; param: PhysicsServer2D_JointParam; value: Float) {.base.} = (discard)
method jointGetParam*(self: PhysicsServer2DExtension; joint: RID; param: PhysicsServer2D_JointParam): Float {.base.} = (discard)
method jointDisableCollisionsBetweenBodies*(self: PhysicsServer2DExtension; joint: RID; disable: Bool) {.base.} = (discard)
method jointIsDisabledCollisionsBetweenBodies*(self: PhysicsServer2DExtension; joint: RID): Bool {.base.} = (discard)
method jointMakePin*(self: PhysicsServer2DExtension; joint: RID; anchor: Vector2; bodyA: RID; bodyB: RID) {.base.} = (discard)
method jointMakeGroove*(self: PhysicsServer2DExtension; joint: RID; aGroove1: Vector2; aGroove2: Vector2; bAnchor: Vector2; bodyA: RID; bodyB: RID) {.base.} = (discard)
method jointMakeDampedSpring*(self: PhysicsServer2DExtension; joint: RID; anchorA: Vector2; anchorB: Vector2; bodyA: RID; bodyB: RID) {.base.} = (discard)
method pinJointSetParam*(self: PhysicsServer2DExtension; joint: RID; param: PhysicsServer2D_PinJointParam; value: Float) {.base.} = (discard)
method pinJointGetParam*(self: PhysicsServer2DExtension; joint: RID; param: PhysicsServer2D_PinJointParam): Float {.base.} = (discard)
method dampedSpringJointSetParam*(self: PhysicsServer2DExtension; joint: RID; param: PhysicsServer2D_DampedSpringParam; value: Float) {.base.} = (discard)
method dampedSpringJointGetParam*(self: PhysicsServer2DExtension; joint: RID; param: PhysicsServer2D_DampedSpringParam): Float {.base.} = (discard)
method jointGetType*(self: PhysicsServer2DExtension; joint: RID): PhysicsServer2D_JointType {.base.} = (discard)
method freeRid*(self: PhysicsServer2DExtension; rid: RID) {.base.} = (discard)
method setActive*(self: PhysicsServer2DExtension; active: Bool) {.base.} = (discard)
method init*(self: PhysicsServer2DExtension) {.base.} = (discard)
method step*(self: PhysicsServer2DExtension; step: Float) {.base.} = (discard)
method sync*(self: PhysicsServer2DExtension) {.base.} = (discard)
method flushQueries*(self: PhysicsServer2DExtension) {.base.} = (discard)
method endSync*(self: PhysicsServer2DExtension) {.base.} = (discard)
method finish*(self: PhysicsServer2DExtension) {.base.} = (discard)
method isFlushingQueries*(self: PhysicsServer2DExtension): Bool {.base.} = (discard)
method getProcessInfo*(self: PhysicsServer2DExtension; processInfo: PhysicsServer2D_ProcessInfo): int32 {.base.} = (discard)
proc bodyTestMotionIsExcludingBody*(self: PhysicsServer2DExtension; body: RID): Bool =
  init_methodbind(PhysicsServer2DExtension, "body_test_motion_is_excluding_body", 4155700596)
  var `?param`: array[1, pointer]
  body.encode(`?param`[0])
  var ret: encoded Bool
  interface_Object_methodBindPtrCall(methodbind, getOwner self, addr `?param`[0], addr ret)
  (addr ret).decode(Bool)
proc bodyTestMotionIsExcludingObject*(self: PhysicsServer2DExtension; `object`: uint64): Bool =
  init_methodbind(PhysicsServer2DExtension, "body_test_motion_is_excluding_object", 1116898809)
  var `?param`: array[1, pointer]
  `object`.encode(`?param`[0])
  var ret: encoded Bool
  interface_Object_methodBindPtrCall(methodbind, getOwner self, addr `?param`[0], addr ret)
  (addr ret).decode(Bool)