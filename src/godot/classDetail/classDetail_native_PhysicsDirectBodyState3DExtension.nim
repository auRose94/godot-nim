# ======================================== #
# This module was generated automatically. #
# Edits will be lost.                      #
# ======================================== #
import ./../helper/engineClassDefiner

method getTotalGravity*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method getTotalLinearDamp*(self: PhysicsDirectBodyState3DExtension): Float {.base.} = (discard)
method getTotalAngularDamp*(self: PhysicsDirectBodyState3DExtension): Float {.base.} = (discard)
method getCenterOfMass*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method getCenterOfMassLocal*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method getPrincipalInertiaAxes*(self: PhysicsDirectBodyState3DExtension): Basis {.base.} = (discard)
method getInverseMass*(self: PhysicsDirectBodyState3DExtension): Float {.base.} = (discard)
method getInverseInertia*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method getInverseInertiaTensor*(self: PhysicsDirectBodyState3DExtension): Basis {.base.} = (discard)
method setLinearVelocity*(self: PhysicsDirectBodyState3DExtension; velocity: Vector3) {.base.} = (discard)
method getLinearVelocity*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method setAngularVelocity*(self: PhysicsDirectBodyState3DExtension; velocity: Vector3) {.base.} = (discard)
method getAngularVelocity*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method setTransform*(self: PhysicsDirectBodyState3DExtension; transform: Transform3D) {.base.} = (discard)
method getTransform*(self: PhysicsDirectBodyState3DExtension): Transform3D {.base.} = (discard)
method getVelocityAtLocalPosition*(self: PhysicsDirectBodyState3DExtension; localPosition: Vector3): Vector3 {.base.} = (discard)
method applyCentralImpulse*(self: PhysicsDirectBodyState3DExtension; impulse: Vector3) {.base.} = (discard)
method applyImpulse*(self: PhysicsDirectBodyState3DExtension; impulse: Vector3; position: Vector3) {.base.} = (discard)
method applyTorqueImpulse*(self: PhysicsDirectBodyState3DExtension; impulse: Vector3) {.base.} = (discard)
method applyCentralForce*(self: PhysicsDirectBodyState3DExtension; force: Vector3) {.base.} = (discard)
method applyForce*(self: PhysicsDirectBodyState3DExtension; force: Vector3; position: Vector3) {.base.} = (discard)
method applyTorque*(self: PhysicsDirectBodyState3DExtension; torque: Vector3) {.base.} = (discard)
method addConstantCentralForce*(self: PhysicsDirectBodyState3DExtension; force: Vector3) {.base.} = (discard)
method addConstantForce*(self: PhysicsDirectBodyState3DExtension; force: Vector3; position: Vector3) {.base.} = (discard)
method addConstantTorque*(self: PhysicsDirectBodyState3DExtension; torque: Vector3) {.base.} = (discard)
method setConstantForce*(self: PhysicsDirectBodyState3DExtension; force: Vector3) {.base.} = (discard)
method getConstantForce*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method setConstantTorque*(self: PhysicsDirectBodyState3DExtension; torque: Vector3) {.base.} = (discard)
method getConstantTorque*(self: PhysicsDirectBodyState3DExtension): Vector3 {.base.} = (discard)
method setSleepState*(self: PhysicsDirectBodyState3DExtension; enabled: Bool) {.base.} = (discard)
method isSleeping*(self: PhysicsDirectBodyState3DExtension): Bool {.base.} = (discard)
method getContactCount*(self: PhysicsDirectBodyState3DExtension): int32 {.base.} = (discard)
method getContactLocalPosition*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): Vector3 {.base.} = (discard)
method getContactLocalNormal*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): Vector3 {.base.} = (discard)
method getContactImpulse*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): Vector3 {.base.} = (discard)
method getContactLocalShape*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): int32 {.base.} = (discard)
method getContactLocalVelocityAtPosition*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): Vector3 {.base.} = (discard)
method getContactCollider*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): RID {.base.} = (discard)
method getContactColliderPosition*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): Vector3 {.base.} = (discard)
method getContactColliderId*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): uint64 {.base.} = (discard)
method getContactColliderObject*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): Object {.base.} = (discard)
method getContactColliderShape*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): int32 {.base.} = (discard)
method getContactColliderVelocityAtPosition*(self: PhysicsDirectBodyState3DExtension; contactIdx: int32): Vector3 {.base.} = (discard)
method getStep*(self: PhysicsDirectBodyState3DExtension): Float {.base.} = (discard)
method integrateForces*(self: PhysicsDirectBodyState3DExtension) {.base.} = (discard)
method getSpaceState*(self: PhysicsDirectBodyState3DExtension): PhysicsDirectSpaceState3D {.base.} = (discard)