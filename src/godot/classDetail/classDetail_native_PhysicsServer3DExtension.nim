# ======================================== #
# This module was generated automatically. #
# Edits will be lost.                      #
# ======================================== #
import ./../helper/engineClassDefiner

method worldBoundaryShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method separationRayShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method sphereShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method boxShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method capsuleShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method cylinderShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method convexPolygonShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method concavePolygonShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method heightmapShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method customShapeCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method shapeSetData*(self: PhysicsServer3DExtension; shape: RID; data: ptr Variant) {.base.} = (discard)
method shapeSetCustomSolverBias*(self: PhysicsServer3DExtension; shape: RID; bias: Float) {.base.} = (discard)
method shapeSetMargin*(self: PhysicsServer3DExtension; shape: RID; margin: Float) {.base.} = (discard)
method shapeGetMargin*(self: PhysicsServer3DExtension; shape: RID): Float {.base.} = (discard)
method shapeGetType*(self: PhysicsServer3DExtension; shape: RID): PhysicsServer3D_ShapeType {.base.} = (discard)
method shapeGetData*(self: PhysicsServer3DExtension; shape: RID): Variant {.base.} = (discard)
method shapeGetCustomSolverBias*(self: PhysicsServer3DExtension; shape: RID): Float {.base.} = (discard)
method spaceCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method spaceSetActive*(self: PhysicsServer3DExtension; space: RID; active: Bool) {.base.} = (discard)
method spaceIsActive*(self: PhysicsServer3DExtension; space: RID): Bool {.base.} = (discard)
method spaceSetParam*(self: PhysicsServer3DExtension; space: RID; param: PhysicsServer3D_SpaceParameter; value: Float) {.base.} = (discard)
method spaceGetParam*(self: PhysicsServer3DExtension; space: RID; param: PhysicsServer3D_SpaceParameter): Float {.base.} = (discard)
method spaceGetDirectState*(self: PhysicsServer3DExtension; space: RID): PhysicsDirectSpaceState3D {.base.} = (discard)
method spaceSetDebugContacts*(self: PhysicsServer3DExtension; space: RID; maxContacts: int32) {.base.} = (discard)
method spaceGetContacts*(self: PhysicsServer3DExtension; space: RID): PackedVector3Array {.base.} = (discard)
method spaceGetContactCount*(self: PhysicsServer3DExtension; space: RID): int32 {.base.} = (discard)
method areaCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method areaSetSpace*(self: PhysicsServer3DExtension; area: RID; space: RID) {.base.} = (discard)
method areaGetSpace*(self: PhysicsServer3DExtension; area: RID): RID {.base.} = (discard)
method areaAddShape*(self: PhysicsServer3DExtension; area: RID; shape: RID; transform: Transform3D; disabled: Bool) {.base.} = (discard)
method areaSetShape*(self: PhysicsServer3DExtension; area: RID; shapeIdx: int32; shape: RID) {.base.} = (discard)
method areaSetShapeTransform*(self: PhysicsServer3DExtension; area: RID; shapeIdx: int32; transform: Transform3D) {.base.} = (discard)
method areaSetShapeDisabled*(self: PhysicsServer3DExtension; area: RID; shapeIdx: int32; disabled: Bool) {.base.} = (discard)
method areaGetShapeCount*(self: PhysicsServer3DExtension; area: RID): int32 {.base.} = (discard)
method areaGetShape*(self: PhysicsServer3DExtension; area: RID; shapeIdx: int32): RID {.base.} = (discard)
method areaGetShapeTransform*(self: PhysicsServer3DExtension; area: RID; shapeIdx: int32): Transform3D {.base.} = (discard)
method areaRemoveShape*(self: PhysicsServer3DExtension; area: RID; shapeIdx: int32) {.base.} = (discard)
method areaClearShapes*(self: PhysicsServer3DExtension; area: RID) {.base.} = (discard)
method areaAttachObjectInstanceId*(self: PhysicsServer3DExtension; area: RID; id: uint64) {.base.} = (discard)
method areaGetObjectInstanceId*(self: PhysicsServer3DExtension; area: RID): uint64 {.base.} = (discard)
method areaSetParam*(self: PhysicsServer3DExtension; area: RID; param: PhysicsServer3D_AreaParameter; value: ptr Variant) {.base.} = (discard)
method areaSetTransform*(self: PhysicsServer3DExtension; area: RID; transform: Transform3D) {.base.} = (discard)
method areaGetParam*(self: PhysicsServer3DExtension; area: RID; param: PhysicsServer3D_AreaParameter): Variant {.base.} = (discard)
method areaGetTransform*(self: PhysicsServer3DExtension; area: RID): Transform3D {.base.} = (discard)
method areaSetCollisionLayer*(self: PhysicsServer3DExtension; area: RID; layer: uint32) {.base.} = (discard)
method areaGetCollisionLayer*(self: PhysicsServer3DExtension; area: RID): uint32 {.base.} = (discard)
method areaSetCollisionMask*(self: PhysicsServer3DExtension; area: RID; mask: uint32) {.base.} = (discard)
method areaGetCollisionMask*(self: PhysicsServer3DExtension; area: RID): uint32 {.base.} = (discard)
method areaSetMonitorable*(self: PhysicsServer3DExtension; area: RID; monitorable: Bool) {.base.} = (discard)
method areaSetRayPickable*(self: PhysicsServer3DExtension; area: RID; enable: Bool) {.base.} = (discard)
method areaSetMonitorCallback*(self: PhysicsServer3DExtension; area: RID; callback: Callable) {.base.} = (discard)
method areaSetAreaMonitorCallback*(self: PhysicsServer3DExtension; area: RID; callback: Callable) {.base.} = (discard)
method bodyCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method bodySetSpace*(self: PhysicsServer3DExtension; body: RID; space: RID) {.base.} = (discard)
method bodyGetSpace*(self: PhysicsServer3DExtension; body: RID): RID {.base.} = (discard)
method bodySetMode*(self: PhysicsServer3DExtension; body: RID; mode: PhysicsServer3D_BodyMode) {.base.} = (discard)
method bodyGetMode*(self: PhysicsServer3DExtension; body: RID): PhysicsServer3D_BodyMode {.base.} = (discard)
method bodyAddShape*(self: PhysicsServer3DExtension; body: RID; shape: RID; transform: Transform3D; disabled: Bool) {.base.} = (discard)
method bodySetShape*(self: PhysicsServer3DExtension; body: RID; shapeIdx: int32; shape: RID) {.base.} = (discard)
method bodySetShapeTransform*(self: PhysicsServer3DExtension; body: RID; shapeIdx: int32; transform: Transform3D) {.base.} = (discard)
method bodySetShapeDisabled*(self: PhysicsServer3DExtension; body: RID; shapeIdx: int32; disabled: Bool) {.base.} = (discard)
method bodyGetShapeCount*(self: PhysicsServer3DExtension; body: RID): int32 {.base.} = (discard)
method bodyGetShape*(self: PhysicsServer3DExtension; body: RID; shapeIdx: int32): RID {.base.} = (discard)
method bodyGetShapeTransform*(self: PhysicsServer3DExtension; body: RID; shapeIdx: int32): Transform3D {.base.} = (discard)
method bodyRemoveShape*(self: PhysicsServer3DExtension; body: RID; shapeIdx: int32) {.base.} = (discard)
method bodyClearShapes*(self: PhysicsServer3DExtension; body: RID) {.base.} = (discard)
method bodyAttachObjectInstanceId*(self: PhysicsServer3DExtension; body: RID; id: uint64) {.base.} = (discard)
method bodyGetObjectInstanceId*(self: PhysicsServer3DExtension; body: RID): uint64 {.base.} = (discard)
method bodySetEnableContinuousCollisionDetection*(self: PhysicsServer3DExtension; body: RID; enable: Bool) {.base.} = (discard)
method bodyIsContinuousCollisionDetectionEnabled*(self: PhysicsServer3DExtension; body: RID): Bool {.base.} = (discard)
method bodySetCollisionLayer*(self: PhysicsServer3DExtension; body: RID; layer: uint32) {.base.} = (discard)
method bodyGetCollisionLayer*(self: PhysicsServer3DExtension; body: RID): uint32 {.base.} = (discard)
method bodySetCollisionMask*(self: PhysicsServer3DExtension; body: RID; mask: uint32) {.base.} = (discard)
method bodyGetCollisionMask*(self: PhysicsServer3DExtension; body: RID): uint32 {.base.} = (discard)
method bodySetCollisionPriority*(self: PhysicsServer3DExtension; body: RID; priority: Float) {.base.} = (discard)
method bodyGetCollisionPriority*(self: PhysicsServer3DExtension; body: RID): Float {.base.} = (discard)
method bodySetUserFlags*(self: PhysicsServer3DExtension; body: RID; flags: uint32) {.base.} = (discard)
method bodyGetUserFlags*(self: PhysicsServer3DExtension; body: RID): uint32 {.base.} = (discard)
method bodySetParam*(self: PhysicsServer3DExtension; body: RID; param: PhysicsServer3D_BodyParameter; value: ptr Variant) {.base.} = (discard)
method bodyGetParam*(self: PhysicsServer3DExtension; body: RID; param: PhysicsServer3D_BodyParameter): Variant {.base.} = (discard)
method bodyResetMassProperties*(self: PhysicsServer3DExtension; body: RID) {.base.} = (discard)
method bodySetState*(self: PhysicsServer3DExtension; body: RID; state: PhysicsServer3D_BodyState; value: ptr Variant) {.base.} = (discard)
method bodyGetState*(self: PhysicsServer3DExtension; body: RID; state: PhysicsServer3D_BodyState): Variant {.base.} = (discard)
method bodyApplyCentralImpulse*(self: PhysicsServer3DExtension; body: RID; impulse: Vector3) {.base.} = (discard)
method bodyApplyImpulse*(self: PhysicsServer3DExtension; body: RID; impulse: Vector3; position: Vector3) {.base.} = (discard)
method bodyApplyTorqueImpulse*(self: PhysicsServer3DExtension; body: RID; impulse: Vector3) {.base.} = (discard)
method bodyApplyCentralForce*(self: PhysicsServer3DExtension; body: RID; force: Vector3) {.base.} = (discard)
method bodyApplyForce*(self: PhysicsServer3DExtension; body: RID; force: Vector3; position: Vector3) {.base.} = (discard)
method bodyApplyTorque*(self: PhysicsServer3DExtension; body: RID; torque: Vector3) {.base.} = (discard)
method bodyAddConstantCentralForce*(self: PhysicsServer3DExtension; body: RID; force: Vector3) {.base.} = (discard)
method bodyAddConstantForce*(self: PhysicsServer3DExtension; body: RID; force: Vector3; position: Vector3) {.base.} = (discard)
method bodyAddConstantTorque*(self: PhysicsServer3DExtension; body: RID; torque: Vector3) {.base.} = (discard)
method bodySetConstantForce*(self: PhysicsServer3DExtension; body: RID; force: Vector3) {.base.} = (discard)
method bodyGetConstantForce*(self: PhysicsServer3DExtension; body: RID): Vector3 {.base.} = (discard)
method bodySetConstantTorque*(self: PhysicsServer3DExtension; body: RID; torque: Vector3) {.base.} = (discard)
method bodyGetConstantTorque*(self: PhysicsServer3DExtension; body: RID): Vector3 {.base.} = (discard)
method bodySetAxisVelocity*(self: PhysicsServer3DExtension; body: RID; axisVelocity: Vector3) {.base.} = (discard)
method bodySetAxisLock*(self: PhysicsServer3DExtension; body: RID; axis: PhysicsServer3D_BodyAxis; lock: Bool) {.base.} = (discard)
method bodyIsAxisLocked*(self: PhysicsServer3DExtension; body: RID; axis: PhysicsServer3D_BodyAxis): Bool {.base.} = (discard)
method bodyAddCollisionException*(self: PhysicsServer3DExtension; body: RID; exceptedBody: RID) {.base.} = (discard)
method bodyRemoveCollisionException*(self: PhysicsServer3DExtension; body: RID; exceptedBody: RID) {.base.} = (discard)
method bodyGetCollisionExceptions*(self: PhysicsServer3DExtension; body: RID): TypedArray[RID] {.base.} = (discard)
method bodySetMaxContactsReported*(self: PhysicsServer3DExtension; body: RID; amount: int32) {.base.} = (discard)
method bodyGetMaxContactsReported*(self: PhysicsServer3DExtension; body: RID): int32 {.base.} = (discard)
method bodySetContactsReportedDepthThreshold*(self: PhysicsServer3DExtension; body: RID; threshold: Float) {.base.} = (discard)
method bodyGetContactsReportedDepthThreshold*(self: PhysicsServer3DExtension; body: RID): Float {.base.} = (discard)
method bodySetOmitForceIntegration*(self: PhysicsServer3DExtension; body: RID; enable: Bool) {.base.} = (discard)
method bodyIsOmittingForceIntegration*(self: PhysicsServer3DExtension; body: RID): Bool {.base.} = (discard)
method bodySetStateSyncCallback*(self: PhysicsServer3DExtension; body: RID; callable: Callable) {.base.} = (discard)
method bodySetForceIntegrationCallback*(self: PhysicsServer3DExtension; body: RID; callable: Callable; userdata: ptr Variant) {.base.} = (discard)
method bodySetRayPickable*(self: PhysicsServer3DExtension; body: RID; enable: Bool) {.base.} = (discard)
method bodyTestMotion*(self: PhysicsServer3DExtension; body: RID; `from`: Transform3D; motion: Vector3; margin: Float; maxCollisions: int32; collideSeparationRay: Bool; recoveryAsCollision: Bool; retval: ptr PhysicsServer3DExtensionMotionResult): Bool {.base.} = (discard)
method bodyGetDirectState*(self: PhysicsServer3DExtension; body: RID): PhysicsDirectBodyState3D {.base.} = (discard)
method softBodyCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method softBodyUpdateRenderingServer*(self: PhysicsServer3DExtension; body: RID; renderingServerHandler: PhysicsServer3DRenderingServerHandler) {.base.} = (discard)
method softBodySetSpace*(self: PhysicsServer3DExtension; body: RID; space: RID) {.base.} = (discard)
method softBodyGetSpace*(self: PhysicsServer3DExtension; body: RID): RID {.base.} = (discard)
method softBodySetRayPickable*(self: PhysicsServer3DExtension; body: RID; enable: Bool) {.base.} = (discard)
method softBodySetCollisionLayer*(self: PhysicsServer3DExtension; body: RID; layer: uint32) {.base.} = (discard)
method softBodyGetCollisionLayer*(self: PhysicsServer3DExtension; body: RID): uint32 {.base.} = (discard)
method softBodySetCollisionMask*(self: PhysicsServer3DExtension; body: RID; mask: uint32) {.base.} = (discard)
method softBodyGetCollisionMask*(self: PhysicsServer3DExtension; body: RID): uint32 {.base.} = (discard)
method softBodyAddCollisionException*(self: PhysicsServer3DExtension; body: RID; bodyB: RID) {.base.} = (discard)
method softBodyRemoveCollisionException*(self: PhysicsServer3DExtension; body: RID; bodyB: RID) {.base.} = (discard)
method softBodyGetCollisionExceptions*(self: PhysicsServer3DExtension; body: RID): TypedArray[RID] {.base.} = (discard)
method softBodySetState*(self: PhysicsServer3DExtension; body: RID; state: PhysicsServer3D_BodyState; variant: ptr Variant) {.base.} = (discard)
method softBodyGetState*(self: PhysicsServer3DExtension; body: RID; state: PhysicsServer3D_BodyState): Variant {.base.} = (discard)
method softBodySetTransform*(self: PhysicsServer3DExtension; body: RID; transform: Transform3D) {.base.} = (discard)
method softBodySetSimulationPrecision*(self: PhysicsServer3DExtension; body: RID; simulationPrecision: int32) {.base.} = (discard)
method softBodyGetSimulationPrecision*(self: PhysicsServer3DExtension; body: RID): int32 {.base.} = (discard)
method softBodySetTotalMass*(self: PhysicsServer3DExtension; body: RID; totalMass: Float) {.base.} = (discard)
method softBodyGetTotalMass*(self: PhysicsServer3DExtension; body: RID): Float {.base.} = (discard)
method softBodySetLinearStiffness*(self: PhysicsServer3DExtension; body: RID; linearStiffness: Float) {.base.} = (discard)
method softBodyGetLinearStiffness*(self: PhysicsServer3DExtension; body: RID): Float {.base.} = (discard)
method softBodySetPressureCoefficient*(self: PhysicsServer3DExtension; body: RID; pressureCoefficient: Float) {.base.} = (discard)
method softBodyGetPressureCoefficient*(self: PhysicsServer3DExtension; body: RID): Float {.base.} = (discard)
method softBodySetDampingCoefficient*(self: PhysicsServer3DExtension; body: RID; dampingCoefficient: Float) {.base.} = (discard)
method softBodyGetDampingCoefficient*(self: PhysicsServer3DExtension; body: RID): Float {.base.} = (discard)
method softBodySetDragCoefficient*(self: PhysicsServer3DExtension; body: RID; dragCoefficient: Float) {.base.} = (discard)
method softBodyGetDragCoefficient*(self: PhysicsServer3DExtension; body: RID): Float {.base.} = (discard)
method softBodySetMesh*(self: PhysicsServer3DExtension; body: RID; mesh: RID) {.base.} = (discard)
method softBodyGetBounds*(self: PhysicsServer3DExtension; body: RID): AABB {.base.} = (discard)
method softBodyMovePoint*(self: PhysicsServer3DExtension; body: RID; pointIndex: int32; globalPosition: Vector3) {.base.} = (discard)
method softBodyGetPointGlobalPosition*(self: PhysicsServer3DExtension; body: RID; pointIndex: int32): Vector3 {.base.} = (discard)
method softBodyRemoveAllPinnedPoints*(self: PhysicsServer3DExtension; body: RID) {.base.} = (discard)
method softBodyPinPoint*(self: PhysicsServer3DExtension; body: RID; pointIndex: int32; pin: Bool) {.base.} = (discard)
method softBodyIsPointPinned*(self: PhysicsServer3DExtension; body: RID; pointIndex: int32): Bool {.base.} = (discard)
method jointCreate*(self: PhysicsServer3DExtension): RID {.base.} = (discard)
method jointClear*(self: PhysicsServer3DExtension; joint: RID) {.base.} = (discard)
method jointMakePin*(self: PhysicsServer3DExtension; joint: RID; bodyA: RID; localA: Vector3; bodyB: RID; localB: Vector3) {.base.} = (discard)
method pinJointSetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_PinJointParam; value: Float) {.base.} = (discard)
method pinJointGetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_PinJointParam): Float {.base.} = (discard)
method pinJointSetLocalA*(self: PhysicsServer3DExtension; joint: RID; localA: Vector3) {.base.} = (discard)
method pinJointGetLocalA*(self: PhysicsServer3DExtension; joint: RID): Vector3 {.base.} = (discard)
method pinJointSetLocalB*(self: PhysicsServer3DExtension; joint: RID; localB: Vector3) {.base.} = (discard)
method pinJointGetLocalB*(self: PhysicsServer3DExtension; joint: RID): Vector3 {.base.} = (discard)
method jointMakeHinge*(self: PhysicsServer3DExtension; joint: RID; bodyA: RID; hingeA: Transform3D; bodyB: RID; hingeB: Transform3D) {.base.} = (discard)
method jointMakeHingeSimple*(self: PhysicsServer3DExtension; joint: RID; bodyA: RID; pivotA: Vector3; axisA: Vector3; bodyB: RID; pivotB: Vector3; axisB: Vector3) {.base.} = (discard)
method hingeJointSetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_HingeJointParam; value: Float) {.base.} = (discard)
method hingeJointGetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_HingeJointParam): Float {.base.} = (discard)
method hingeJointSetFlag*(self: PhysicsServer3DExtension; joint: RID; flag: PhysicsServer3D_HingeJointFlag; enabled: Bool) {.base.} = (discard)
method hingeJointGetFlag*(self: PhysicsServer3DExtension; joint: RID; flag: PhysicsServer3D_HingeJointFlag): Bool {.base.} = (discard)
method jointMakeSlider*(self: PhysicsServer3DExtension; joint: RID; bodyA: RID; localRefA: Transform3D; bodyB: RID; localRefB: Transform3D) {.base.} = (discard)
method sliderJointSetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_SliderJointParam; value: Float) {.base.} = (discard)
method sliderJointGetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_SliderJointParam): Float {.base.} = (discard)
method jointMakeConeTwist*(self: PhysicsServer3DExtension; joint: RID; bodyA: RID; localRefA: Transform3D; bodyB: RID; localRefB: Transform3D) {.base.} = (discard)
method coneTwistJointSetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_ConeTwistJointParam; value: Float) {.base.} = (discard)
method coneTwistJointGetParam*(self: PhysicsServer3DExtension; joint: RID; param: PhysicsServer3D_ConeTwistJointParam): Float {.base.} = (discard)
method jointMakeGeneric6dof*(self: PhysicsServer3DExtension; joint: RID; bodyA: RID; localRefA: Transform3D; bodyB: RID; localRefB: Transform3D) {.base.} = (discard)
method generic6dofJointSetParam*(self: PhysicsServer3DExtension; joint: RID; axis: Vector3_Axis; param: PhysicsServer3D_G6DOFJointAxisParam; value: Float) {.base.} = (discard)
method generic6dofJointGetParam*(self: PhysicsServer3DExtension; joint: RID; axis: Vector3_Axis; param: PhysicsServer3D_G6DOFJointAxisParam): Float {.base.} = (discard)
method generic6dofJointSetFlag*(self: PhysicsServer3DExtension; joint: RID; axis: Vector3_Axis; flag: PhysicsServer3D_G6DOFJointAxisFlag; enable: Bool) {.base.} = (discard)
method generic6dofJointGetFlag*(self: PhysicsServer3DExtension; joint: RID; axis: Vector3_Axis; flag: PhysicsServer3D_G6DOFJointAxisFlag): Bool {.base.} = (discard)
method jointGetType*(self: PhysicsServer3DExtension; joint: RID): PhysicsServer3D_JointType {.base.} = (discard)
method jointSetSolverPriority*(self: PhysicsServer3DExtension; joint: RID; priority: int32) {.base.} = (discard)
method jointGetSolverPriority*(self: PhysicsServer3DExtension; joint: RID): int32 {.base.} = (discard)
method jointDisableCollisionsBetweenBodies*(self: PhysicsServer3DExtension; joint: RID; disable: Bool) {.base.} = (discard)
method jointIsDisabledCollisionsBetweenBodies*(self: PhysicsServer3DExtension; joint: RID): Bool {.base.} = (discard)
method freeRid*(self: PhysicsServer3DExtension; rid: RID) {.base.} = (discard)
method setActive*(self: PhysicsServer3DExtension; active: Bool) {.base.} = (discard)
method init*(self: PhysicsServer3DExtension) {.base.} = (discard)
method step*(self: PhysicsServer3DExtension; step: Float) {.base.} = (discard)
method sync*(self: PhysicsServer3DExtension) {.base.} = (discard)
method flushQueries*(self: PhysicsServer3DExtension) {.base.} = (discard)
method endSync*(self: PhysicsServer3DExtension) {.base.} = (discard)
method finish*(self: PhysicsServer3DExtension) {.base.} = (discard)
method isFlushingQueries*(self: PhysicsServer3DExtension): Bool {.base.} = (discard)
method getProcessInfo*(self: PhysicsServer3DExtension; processInfo: PhysicsServer3D_ProcessInfo): int32 {.base.} = (discard)
proc bodyTestMotionIsExcludingBody*(self: PhysicsServer3DExtension; body: RID): Bool =
  init_methodbind(PhysicsServer3DExtension, "body_test_motion_is_excluding_body", 4155700596)
  var `?param`: array[1, pointer]
  body.encode(`?param`[0])
  var ret: encoded Bool
  interface_Object_methodBindPtrCall(methodbind, getOwner self, addr `?param`[0], addr ret)
  (addr ret).decode(Bool)
proc bodyTestMotionIsExcludingObject*(self: PhysicsServer3DExtension; `object`: uint64): Bool =
  init_methodbind(PhysicsServer3DExtension, "body_test_motion_is_excluding_object", 1116898809)
  var `?param`: array[1, pointer]
  `object`.encode(`?param`[0])
  var ret: encoded Bool
  interface_Object_methodBindPtrCall(methodbind, getOwner self, addr `?param`[0], addr ret)
  (addr ret).decode(Bool)