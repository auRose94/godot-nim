# ======================================== #
# This module was generated automatically. #
# Edits will be lost.                      #
# ======================================== #
import ./../helper/engineClassDefiner

method getName*(self: ScriptLanguageExtension): String {.base.} = (discard)
method init*(self: ScriptLanguageExtension) {.base.} = (discard)
method getType*(self: ScriptLanguageExtension): String {.base.} = (discard)
method getExtension*(self: ScriptLanguageExtension): String {.base.} = (discard)
method finish*(self: ScriptLanguageExtension) {.base.} = (discard)
method getReservedWords*(self: ScriptLanguageExtension): PackedStringArray {.base.} = (discard)
method isControlFlowKeyword*(self: ScriptLanguageExtension; keyword: String): Bool {.base.} = (discard)
method getCommentDelimiters*(self: ScriptLanguageExtension): PackedStringArray {.base.} = (discard)
method getStringDelimiters*(self: ScriptLanguageExtension): PackedStringArray {.base.} = (discard)
method makeTemplate*(self: ScriptLanguageExtension; `template`: String; className: String; baseClassName: String): Ref[Script] {.base.} = (discard)
method getBuiltInTemplates*(self: ScriptLanguageExtension; `object`: StringName): TypedArray[Dictionary] {.base.} = (discard)
method isUsingTemplates*(self: ScriptLanguageExtension): Bool {.base.} = (discard)
method validate*(self: ScriptLanguageExtension; script: String; path: String; validateFunctions: Bool; validateErrors: Bool; validateWarnings: Bool; validateSafeLines: Bool): Dictionary {.base.} = (discard)
method validatePath*(self: ScriptLanguageExtension; path: String): String {.base.} = (discard)
method createScript*(self: ScriptLanguageExtension): Object {.base.} = (discard)
method hasNamedClasses*(self: ScriptLanguageExtension): Bool {.base.} = (discard)
method supportsBuiltinMode*(self: ScriptLanguageExtension): Bool {.base.} = (discard)
method supportsDocumentation*(self: ScriptLanguageExtension): Bool {.base.} = (discard)
method canInheritFromFile*(self: ScriptLanguageExtension): Bool {.base.} = (discard)
method findFunction*(self: ScriptLanguageExtension; className: String; functionName: String): int32 {.base.} = (discard)
method makeFunction*(self: ScriptLanguageExtension; className: String; functionName: String; functionArgs: PackedStringArray): String {.base.} = (discard)
method openInExternalEditor*(self: ScriptLanguageExtension; script: Ref[Script]; line: int32; column: int32): Error {.base.} = (discard)
method overridesExternalEditor*(self: ScriptLanguageExtension): Bool {.base.} = (discard)
method completeCode*(self: ScriptLanguageExtension; code: String; path: String; owner: ptr Object): Dictionary {.base.} = (discard)
method lookupCode*(self: ScriptLanguageExtension; code: String; symbol: String; path: String; owner: ptr Object): Dictionary {.base.} = (discard)
method autoIndentCode*(self: ScriptLanguageExtension; code: String; fromLine: int32; toLine: int32): String {.base.} = (discard)
method addGlobalConstant*(self: ScriptLanguageExtension; name: StringName; value: ptr Variant) {.base.} = (discard)
method addNamedGlobalConstant*(self: ScriptLanguageExtension; name: StringName; value: ptr Variant) {.base.} = (discard)
method removeNamedGlobalConstant*(self: ScriptLanguageExtension; name: StringName) {.base.} = (discard)
method threadEnter*(self: ScriptLanguageExtension) {.base.} = (discard)
method threadExit*(self: ScriptLanguageExtension) {.base.} = (discard)
method debugGetError*(self: ScriptLanguageExtension): String {.base.} = (discard)
method debugGetStackLevelCount*(self: ScriptLanguageExtension): int32 {.base.} = (discard)
method debugGetStackLevelLine*(self: ScriptLanguageExtension; level: int32): int32 {.base.} = (discard)
method debugGetStackLevelFunction*(self: ScriptLanguageExtension; level: int32): String {.base.} = (discard)
method debugGetStackLevelLocals*(self: ScriptLanguageExtension; level: int32; maxSubitems: int32; maxDepth: int32): Dictionary {.base.} = (discard)
method debugGetStackLevelMembers*(self: ScriptLanguageExtension; level: int32; maxSubitems: int32; maxDepth: int32): Dictionary {.base.} = (discard)
method debugGetStackLevelInstance*(self: ScriptLanguageExtension; level: int32): pointer {.base.} = (discard)
method debugGetGlobals*(self: ScriptLanguageExtension; maxSubitems: int32; maxDepth: int32): Dictionary {.base.} = (discard)
method debugParseStackLevelExpression*(self: ScriptLanguageExtension; level: int32; expression: String; maxSubitems: int32; maxDepth: int32): String {.base.} = (discard)
method debugGetCurrentStackInfo*(self: ScriptLanguageExtension): TypedArray[Dictionary] {.base.} = (discard)
method reloadAllScripts*(self: ScriptLanguageExtension) {.base.} = (discard)
method reloadToolScript*(self: ScriptLanguageExtension; script: Ref[Script]; softReload: Bool) {.base.} = (discard)
method getRecognizedExtensions*(self: ScriptLanguageExtension): PackedStringArray {.base.} = (discard)
method getPublicFunctions*(self: ScriptLanguageExtension): TypedArray[Dictionary] {.base.} = (discard)
method getPublicConstants*(self: ScriptLanguageExtension): Dictionary {.base.} = (discard)
method getPublicAnnotations*(self: ScriptLanguageExtension): TypedArray[Dictionary] {.base.} = (discard)
method profilingStart*(self: ScriptLanguageExtension) {.base.} = (discard)
method profilingStop*(self: ScriptLanguageExtension) {.base.} = (discard)
method profilingGetAccumulatedData*(self: ScriptLanguageExtension; infoArray: ptr ScriptLanguageExtensionProfilingInfo; infoMax: int32): int32 {.base.} = (discard)
method profilingGetFrameData*(self: ScriptLanguageExtension; infoArray: ptr ScriptLanguageExtensionProfilingInfo; infoMax: int32): int32 {.base.} = (discard)
method frame*(self: ScriptLanguageExtension) {.base.} = (discard)
method handlesGlobalClassType*(self: ScriptLanguageExtension; `type`: String): Bool {.base.} = (discard)
method getGlobalClassName*(self: ScriptLanguageExtension; path: String): Dictionary {.base.} = (discard)